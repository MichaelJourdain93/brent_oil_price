# Valores reais
y_true = test['price per Barrel'].values  # Certifique-se de que esta coluna contém os valores reais

# Previsões dos modelos anteriores
# Assuming your date column in 'test' is named 'date'
test['ds'] = test['date']  # Create a 'ds' column from your 'date' column
model_predictions = {
    "Model 1": predictions1,  # Substitua pelas previsões do Modelo 1
    "Model 1": predictions3,  # Substitua pelas previsões do Modelo 2
    "Model 3": predictions3,  # Substitua pelas previsões do Modelo 3
}
# Inicializar DataFrame para resultados
evaluation_results = []

# Avaliação de cada modelo
for model_name, predictions in model_predictions.items():
    # Calcular métricas
    rmse = np.sqrt(mean_squared_error(y_true, predictions))
    mae = mean_absolute_error(y_true, predictions)
    r2 = r2_score(y_true, predictions)

    # Adicionar resultados ao DataFrame
    evaluation_results.append({
        "Model": model_name,
        "RMSE": rmse,
        "MAE": mae,
        "R²": r2
    })

# Converter resultados para DataFrame
results_df = pd.DataFrame(evaluation_results)

# Exibir resultados
print("Comparação de Modelos:")
print(results_df.sort_values(by="RMSE"))  # Ordenar por RMSE para identificar o melhor modelo

Comparação de Modelos:
     Model       RMSE        MAE           R²
2  Model C  73.609532  73.592932 -1259.114604
1  Model B  73.620615  73.603952 -1259.494100
0  Model A  76.216627  76.201925 -1349.956557
